import unittest
import io
import sys
import time

from your_module_name import create_client_with_retry

class TestCreateClientWithRetry(unittest.TestCase):
    def test_successful_connection(self):
        # Save the original sys.stdout for later comparison
        original_stdout = sys.stdout
        sys.stdout = io.StringIO()

        # Define a custom function that mimics successful client creation
        def custom_create_client(*args, **kwargs):
            return 'mocked_client'

        # Temporarily replace the create_client function with our custom function
        original_create_client = create_client_with_retry.create_client
        create_client_with_retry.create_client = custom_create_client

        # Call the function with max_retries=3, retry_delay=1
        client = create_client_with_retry(max_retries=3, retry_delay=1)

        # Restore sys.stdout and the original create_client function
        sys.stdout = original_stdout
        create_client_with_retry.create_client = original_create_client

        # Assert that the client was created and no retries were needed
        self.assertEqual(client, 'mocked_client')
        self.assertIn("Client connected successfully", sys.stdout.getvalue())

    # Define other test cases similarly

if __name__ == '__main__':
    unittest.main()
