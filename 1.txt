
from opcua import Client
from opcua.ua import NodeId, AttributeIds, VariantType


class DataChangeHandler:
    def __init__(self, client):
        self.client = client

    def data_change_notification(self, node, val, data):
        print("Data change from server:")
        print_value(node, val)

    def print_value(self, node, val):
        node_id = node.nodeid.Identifier
        if val.Value.VariantType != VariantType.Null:
            print(f"Item \"{node_id}\", Value = {val.Value.Value}")
        else:
            print(f"Item \"{node_id}\", Value not found, error: {val.StatusCode}")


def main():
    client = Client("opc.tcp://MYTSL02946.lnties.com:53530/OPCUA/SimulationServer")
    client.set_security_string("None")
    client.application_uri = "urn:RustClient"
    client.session_timeout = 10000
    client.connect()
    print("Client created")

    handler = DataChangeHandler(client)
    client.create_subscription(2000, handler.data_change_notification)

    # Write a value to a node
    node_id = NodeId(3, 1012)
    value = ua.Variant(20, ua.VariantType.UInt32)
    status_code = client.uaclient.write_attributes(node_id, ua.WriteValue(value, AttributeIds.Value))

    if status_code.is_good():
        print("Value written successfully")
    else:
        print(f"Error writing to node: {status_code}")

    print("Created")


if __name__ == "__main__":
    main()
