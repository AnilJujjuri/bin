
from opcua import Client, ua


def main():
    client = Client("opc.tcp://MYTSL02946.lnties.com:53530/OPCUA/SimulationServer")
    client.set_security_string("None")
    client.application_uri = "urn:RustClient"
    client.session_timeout = 10000
    client.connect()
    print("Client created")

    # Create a subscription and monitored items
    if subscribe_to_values(client).is_ok():
        print("Subscribed")
    else:
        print("Error creating subscription")


def subscribe_to_values(client):
    # Create a subscription
    subscription = client.create_subscription(2000, None)

    # Create some monitored items
    items_to_create = [ua.NodeId(3, ua.Identifier(i)) for i in [1003, 1008, 1009, 1010]]
    monitored_items = subscription.subscribe_data_change(items_to_create)

    # Define a callback function for data changes
    def data_change_callback(_, data_value):
        print("Data change from server:")
        print_value(data_value)

    # Set the callback function for the monitored items
    monitored_items.add_callback(data_change_callback)

    # Write a value to a node
    node_id = ua.NodeId(3, ua.Identifier(1012))
    value = ua.Variant(20, ua.VariantType.UInt32)
    status_code = client.uaclient.write_attributes(node_id, ua.WriteValue(value, ua.AttributeIds.Value))

    if status_code.is_good():
        print("Value written successfully")
    else:
        print(f"Error writing to node: {status_code}")

    print("Created")
    return status_code


def print_value(data_value):
    if data_value.Value.ValueType != ua.VariantType.Null:
        print(f"Value = {data_value.Value.Value}")
    else:
        print(f"Value not found, error: {data_value.StatusCode}")


if __name__ == "__main__":
    main()

