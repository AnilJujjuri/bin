from azure.iot.device import IoTHubModuleClient, Message
import asyncio
import connector

async def on_twin_desired_properties_update(patch):
    print("Getting twin:")
    print(patch)
    if patch:
        devices = patch
        def set_connection_callback():
            connector.set_connection(devices, client, Message)
        module_client.schedule_method("setConnection", set_connection_callback)

async def main():
    module_client = IoTHubModuleClient.create_from_edge_environment()

    async def connect():
        await module_client.connect()

    async def wait():
        await module_client.wait_for_twin_desired_properties_patch_async()

    twin_patch_listener = module_client.on_twin_desired_properties_patch_received
    twin_patch_listener.on_twin_desired_properties_patch_received = on_twin_desired_properties_update

    await asyncio.gather(connect(), wait())

if __name__ == "__main__":
    asyncio.run(main())
