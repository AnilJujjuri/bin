import unittest
import send  # Import the method you want to test

class TestSendToIoTHub(unittest.TestCase):

    def test_send_to_iothub_successful(self):
        data = 1
        try:
            result = send.send_to_iothub(data)
            expected_message = "Successfully sent data to IoT Hub"
            # Assert
            # Add assertions to check if the expected behavior occurred
            self.assertEqual(result, expected_message)
        except Exception as e:
            self.fail("Exception occurred: " + str(e))

    def test_send_to_iothub_with_exception(self):
        # Arrange
        # Define the necessary data for testing
        data = {"properties": {"key1": "value1"}}

        # Act
        try:
            # Simulate an exception by providing an incorrect CONNECTION_STRING
            incorrect_connection_string = "InvalidConnectionString"
            send.send_to_iothub(data, connection_string=incorrect_connection_string)

            # Assert
            # You can add assertions to check for expected error handling behavior
            self.fail("Exception should have been raised.")
        except Exception as e:
            self.assertIsInstance(e, Exception)  # Add your assertions here

if __name__ == '__main__':
    # Run the tests and get the test result
    test_result = unittest.TextTestRunner(verbosity=2).run(unittest.TestLoader().loadTestsFromTestCase(TestSendToIoTHub))

    # Get the number of passed and failed tests
    num_passed = test_result.testsRun - len(test_result.failures) - len(test_result.errors)
    num_failed = len(test_result.failures) + len(test_result.errors)

    # Display the results
    print(f"Passed: {num_passed}")
    print(f"Failed: {num_failed}")
